<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>筆記 on 德瑞克的實驗室</title>
    <link>https://chzlab.net/tags/%E7%AD%86%E8%A8%98/</link>
    <description>Recent content in 筆記 on 德瑞克的實驗室</description>
    <image>
      <url>https://chzlab.net/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://chzlab.net/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 05 Feb 2022 12:28:10 +0800</lastBuildDate><atom:link href="https://chzlab.net/tags/%E7%AD%86%E8%A8%98/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>資料密集型應用系統設計 (1)</title>
      <link>https://chzlab.net/2022/02/05/%E8%B3%87%E6%96%99%E5%AF%86%E9%9B%86%E5%9E%8B%E6%87%89%E7%94%A8%E7%B3%BB%E7%B5%B1%E8%A8%AD%E8%A8%88-1/</link>
      <pubDate>Sat, 05 Feb 2022 12:28:10 +0800</pubDate>
      
      <guid>https://chzlab.net/2022/02/05/%E8%B3%87%E6%96%99%E5%AF%86%E9%9B%86%E5%9E%8B%E6%87%89%E7%94%A8%E7%B3%BB%E7%B5%B1%E8%A8%AD%E8%A8%88-1/</guid>
      <description>第一章 可靠性，可擴展性，可維護性的應用系統 背景 目前多數的系統，屬於資料密集型 (data-intensive)，著重於資料的量級、複雜度、快速變化等狀況延伸的問題。 主要組成為：資料庫、 cache 、 search index 、 steam processing 、 batch processing。 會根據情境來設計出相對合適的架構。
資料系統思維 書中將 Redis 、 Apache Kafka 等非 DB 也歸類在資料系統下的原因為，這些也根據情境提供了類似的功能使用， 不再是以傳統的角度，去分類這些服務。會透過組合這些服務，設計出系統。
三個思路  可靠 p.6 可擴展 p.10  twitter tweets 優化  user 觀看 feed 時，會先將關注的人的 feed 拉出合併，但在後續量級提昇造成查詢負擔。 user 增加一個 cache feed ，當有新 tweet 時，放入到對應的 cache feed。 這邊最後的方式，根據 user 的 關注的人，來做兩種方式混合使用。   Amazon SLO 用 P99.9   可維護 p.18  </description>
    </item>
    
    <item>
      <title>一學就會的拍片課摘錄筆記</title>
      <link>https://chzlab.net/2020/03/24/%E4%B8%80%E5%AD%B8%E5%B0%B1%E6%9C%83%E7%9A%84%E6%8B%8D%E7%89%87%E8%AA%B2%E6%91%98%E9%8C%84%E7%AD%86%E8%A8%98/</link>
      <pubDate>Tue, 24 Mar 2020 20:51:14 +0000</pubDate>
      
      <guid>https://chzlab.net/2020/03/24/%E4%B8%80%E5%AD%B8%E5%B0%B1%E6%9C%83%E7%9A%84%E6%8B%8D%E7%89%87%E8%AA%B2%E6%91%98%E9%8C%84%E7%AD%86%E8%A8%98/</guid>
      <description>基本上手指南  用鏡頭思考  目標是誰？ 在做什麼？ 有不有趣？   不有趣，停下。找有趣內容拍攝，避免浪費時間處理不可用鏡頭或片段。
     2. 看到眼白再拍攝 &amp;gt; 人的面部表情可作為鏡頭焦點。 3. 鏡頭時間 * 時間建議不要超過 10 秒。 * 短鏡頭讓影片更具衝擊性。 4. 拍攝 * 用腳變焦，自行靠近主體。 * 使用腳架。 * 別用 「數位變焦」。 5. 站穩！別亂動 * 拍攝時不變焦。 * 攝影機當相機。 * 確認畫面 =&amp;gt; 按下開始 =&amp;gt; 拍攝 =&amp;gt; 停止。 * 移動 =&amp;gt; 對準 =&amp;gt; 拍攝 =&amp;gt; 停止，循環。 6. 光源保持在後，保持明亮 &amp;gt; 光線過強，讓陽光斜照，避免過亮。 7. 關閉數位特效 &amp;gt; 保留彈性，加工透過後製。 8. 專注於真正感興趣的內容 * 想要表達的重點。 * 神情、動作、雙方的反應。 * 原因、過程、結果。 9.</description>
    </item>
    
    <item>
      <title>正規表達式-基本概念</title>
      <link>https://chzlab.net/2020/02/28/%E6%AD%A3%E8%A6%8F%E8%A1%A8%E9%81%94%E5%BC%8F-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Fri, 28 Feb 2020 19:09:58 +0000</pubDate>
      
      <guid>https://chzlab.net/2020/02/28/%E6%AD%A3%E8%A6%8F%E8%A1%A8%E9%81%94%E5%BC%8F-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</guid>
      <description>記錄 精通正規式表達式 相關的心得與筆記
   詮釋字元 名稱 匹配內容     . 句點 任何一個字元   [&amp;hellip;] 字元類別(character class) 任何一個列出的字元   [^&amp;hellip;] 反轉字元類別 任何一個沒有列出的字元   ^ 脫字號 行首位置   $ 錢號 行尾位置   ＼ or、或、bar 匹配由它分隔的任一表達式   () 括號 限制 | 範圍   \&amp;lt; word boundary 單字開頭位置 (單詞邊界、metasequences、詮釋序列)   \&amp;gt; word boundary 單字結束位置 (單詞邊界、metasequences、詮釋序列)    特殊情境解釋：
  在 字元類別 狀況，要確認 使用的詮釋字元 在 字元類別 內是否有意義。</description>
    </item>
    
  </channel>
</rss>
