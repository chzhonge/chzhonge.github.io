<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>pip on 德瑞克的實驗室</title>
    <link>https://chzlab.net/tags/pip/</link>
    <description>Recent content in pip on 德瑞克的實驗室</description>
    <image>
      <url>https://chzlab.net/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://chzlab.net/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 22 Jan 2021 14:00:00 +0000</lastBuildDate><atom:link href="https://chzlab.net/tags/pip/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>python flask 體驗</title>
      <link>https://chzlab.net/2021/01/22/python-flask-%E9%AB%94%E9%A9%97/</link>
      <pubDate>Fri, 22 Jan 2021 14:00:00 +0000</pubDate>
      
      <guid>https://chzlab.net/2021/01/22/python-flask-%E9%AB%94%E9%A9%97/</guid>
      <description>原因 因為最近需要使用 python 作為 api 開發的環境，與團隊成員討論後，決定使用 flask web framework 框架，第一次使用，記錄相關的筆記。
套件管理 pip pip 基本上可以當做 php 的 composer， 相關的紀錄會在 requirements.txt 。
指令 如果有更動過套件，記得在專案下 pip freeze &amp;gt; requirements.txt，把目前的套件記錄匯出來，避免套件不一致。
 這邊他也會把相依的套件記錄也一併輸出。
 安裝 pip install flask // 指定版號 pip install -v flask==1.0 // 透過指定檔案安裝套件，通常都使用 requirements.txt 作為檔名 pip install -r [檔案名稱] pip install -r requirements.txt 建立套件清單 pip freeze &amp;gt; [檔案名稱] pip freeze &amp;gt; requirements.txt flask 啟用 debug mode 設定 env FLASK_ENV 為 developmen，開啟同時也會啟用 hot reload，這樣變動檔案馬上就會更新。</description>
    </item>
    
  </channel>
</rss>
